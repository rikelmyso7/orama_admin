import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter_mobx/flutter_mobx.dart';
import 'package:get_storage/get_storage.dart';
import 'package:intl/intl.dart';
import 'package:orama_admin/pages/add_rel_info.dart';
import 'package:orama_admin/pages/editarRelatorio_page.dart';
import 'package:orama_admin/routes/routes.dart';
import 'package:orama_admin/stores/stock_store.dart';
import 'package:orama_admin/utils/exit_dialog_utils.dart';
import 'package:provider/provider.dart';

class ReposicaoAddPage extends StatefulWidget {
  @override
  _ReposicaoAddPageState createState() => _ReposicaoAddPageState();
}

class _ReposicaoAddPageState extends State<ReposicaoAddPage> {
  @override
  void initState() {
    super.initState();
    final store = Provider.of<StockStore>(context, listen: false);
    store.fetchReports(
        city: store.selectedCity); // Carrega relatórios para a cidade padrão
  }

  String cidade() {
    final userId = GetStorage().read('userId');
    switch (userId) {
      case "h0g6nwqiRKcM3VSFk6Wu4JFWe9k2":
        return "Jundiaí";
      case "gwYkGevTSZUuGpMQsKLQSlFHZpm2":
        return "Itupeva";
      case "VNlSNV0SKEOACk9Cxcxwe4E2Rtm2":
        return "Jundiaí";
      default:
        return "";
    }
  }

  @override
  Widget build(BuildContext context) {
    final store = Provider.of<StockStore>(context);
    final city = cidade();

    return Observer(builder: (_) {
      return PopScope(
        canPop: false,
        onPopInvoked: (bool didPop) async {
          if (didPop) {
            return;
          }
          final bool shouldPop =
              await DialogUtils.showBackDialog(context) ?? false;
          if (context.mounted && shouldPop) {
            Navigator.pop(context);
          }
        },
        child: Scaffold(
          appBar: AppBar(
            automaticallyImplyLeading: false,
            leading: Builder(
              builder: (BuildContext context) {
                return IconButton(
                  icon: Icon(Icons.menu),
                  color: Colors.white,
                  onPressed: () {
                    Scaffold.of(context).openDrawer(); // Abre o menu hamburguer
                  },
                );
              },
            ),
            title: Text(
              "Relatórios - ${store.selectedCity}",
              style:
                  TextStyle(color: Colors.white, fontWeight: FontWeight.w500),
            ),
            backgroundColor: const Color(0xff60C03D),
          ),
          drawer: Container(
            width: MediaQuery.of(context).size.width / 1.4,
            child: Drawer(
              child: ListView(
                padding: EdgeInsets.zero,
                children: [
                  Container(
                    height: 100,
                    child: const DrawerHeader(
                      decoration: BoxDecoration(
                        color: const Color(0xff60C03D),
                      ),
                      child: Row(
                        children: [
                          Text(
                            'Admin',
                            style: TextStyle(
                                color: Colors.white,
                                fontWeight: FontWeight.w500,
                                fontSize: 26),
                          ),
                        ],
                      ),
                    ),
                  ),
                  ListTile(
                    title: const Align(
                        alignment: Alignment.bottomLeft,
                        child: Row(
                          children: [
                            Text(
                              'Jundiaí',
                              style: TextStyle(
                                  fontWeight: FontWeight.w500, fontSize: 18),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Icon(Icons.post_add)
                          ],
                        )),
                    onTap: () async {
                      store.setCity("Jundiaí"); // Altera para Jundiaí
                      Navigator.pop(context); // Fecha o Drawer
                    },
                  ),
                  Divider(),
                  ListTile(
                    title: const Align(
                        alignment: Alignment.bottomLeft,
                        child: Row(
                          children: [
                            Text(
                              'Itupeva',
                              style: TextStyle(
                                  fontWeight: FontWeight.w500, fontSize: 18),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Icon(Icons.post_add)
                          ],
                        )),
                    onTap: () async {
                      store.setCity("Itupeva"); // Altera para Itupeva
                      Navigator.pop(context); // Fecha o Drawer
                    },
                  ),

                  Divider(),
                  // Outras opções do menu podem ser adicionadas aqui
                  ListTile(
                    title: const Align(
                        alignment: Alignment.bottomLeft,
                        child: Row(
                          children: [
                            Text(
                              'Reposições',
                              style: TextStyle(
                                  fontWeight: FontWeight.w500, fontSize: 18),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Icon(Icons.add_business_outlined)
                          ],
                        )),
                    onTap: () async {
                      await FirebaseAuth.instance.signOut();
                      Navigator.of(context).pushReplacementNamed(RouteName
                          .admin_page); // Redireciona para a tela de login
                    },
                  ),
                  Divider(),
                  // Outras opções do menu podem ser adicionadas aqui
                  ListTile(
                    title: const Align(
                        alignment: Alignment.bottomLeft,
                        child: Row(
                          children: [
                            Text(
                              'Tela Inicial',
                              style: TextStyle(
                                  fontWeight: FontWeight.w500, fontSize: 18),
                            ),
                            SizedBox(
                              width: 5,
                            ),
                            Icon(Icons.home_outlined)
                          ],
                        )),
                    onTap: () async {
                      await FirebaseAuth.instance.signOut();
                      Navigator.of(context).pushReplacementNamed(RouteName
                          .admin_page); // Redireciona para a tela de login
                    },
                  ),
                  Divider(),
                ],
              ),
            ),
          ),body: RefreshIndicator(
            onRefresh: () {
              return store.fetchReports();
            },
            child: Observer(
              builder: (_) {
                if (store.reports.isEmpty) {
                  return Center(child: Text("Nenhum relatório disponível"));
                }
                return ListView.builder(
                  itemCount: store.reports.length,
                  itemBuilder: (context, index) {
                    final report = store.reports[index];
                    final date = report['Data'] ?? '';
                    final formattedDate = date.isNotEmpty
                        ? DateFormat('dd/MM/yy HH:MM')
                            .format(DateTime.tryParse(date) ?? DateTime.now())
                        : "Data não disponível";
                    final name = report['Nome do usuario'] ?? '';
                    final loja = report['Loja'] ?? '';

                    return GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => EditarRelatorioPage(
                              nome: name,
                              data: date,
                              city: cidade(),
                              reportData: report, // Passa os dados do relatório
                              reportId: report[
                                  'id'], // Pass the document ID for existing report
                            ),
                          ),
                        );
                      },
                      child: Card(
                        margin: EdgeInsets.all(8),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                        elevation: 4,
                        child: Padding(
                          padding: const EdgeInsets.all(16.0),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                "Reposições - $loja",
                                style: TextStyle(
                                    fontWeight: FontWeight.bold, fontSize: 16),
                              ),
                              SizedBox(height: 8),
                              Text("Responsável: $name",
                                  style: TextStyle(fontSize: 16)),
                              Text(
                                "Data: $formattedDate",
                                style:
                                    TextStyle(color: Colors.grey, fontSize: 14),
                              ),
                            ],
                          ),
                        ),
                      ),
                    );
                  },
                );
              },
            ),
          ),
        
          floatingActionButton: FloatingActionButton.extended(
              backgroundColor: const Color(0xff60C03D),
              icon: Icon(
                Icons.add,
                color: Colors.white,
              ),
              label: Text(
                'Adicionar',
                style: TextStyle(color: Colors.white),
              ),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => FormularioPage(
                      nome: _nameController.text,
                                        data: _date.toIso8601String(),
                                        loja: storeName,  
                                        reportData: null,
                                        city: city,
                    ),
                  ),
                );
              },
            ),
        ),
      );
    });
  }
}
